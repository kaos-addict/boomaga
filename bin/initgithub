#!/bin/bash
# Create new repo on github.com, can create empty repo, or push yours on github

# Be sure we don't run fancy ls and grep
    alias ls=/usr/bin/ls
    alias grep=/usr/bin/grep
    
    repo_name=$1
    dir_name=`basename $(pwd)`
    g_hub="git@github.com"
    g_raw="https://raw.githubusercontent.com"
    _com=".commented"
    c=${_com:1:1}
    
# X Dialogs functions
    _entry="kdialog --title=$0 --inputbox"
    _error="kdialog --error"
    
# Verify arg or ask for repo name
    if [ "${repo_name}" = "" ]; then
        while [ -z "${repo_name}" ];do
            repo_name="$(${_entry} "Repository name to create?" "")"
            [ "$?" != "0" ] && exit 1
        done
    fi

# Get credentials from git config
    user_name=`git config github.user`
    if [ "${user_name}" = "" ]; then
        ${_error} "Could not find username, to create one, run 'git config --global github.user <username>'"
        exit 1
    fi

# Get github token
    token=$(git config github.token)
    if [ "${token}" = "" ]; then
        ${_error} "Could not find token, run 'git config --global github.token <token>'"
        exit 1
    fi
    
mkdir ${repo_name} && cd ${repo_name} || { 
kdialog --error "Unable to change directory to ${repo_name}"
exit 1 
}
if [ "$(curl -u "${user_name}:${g_token}" https://api.github.com/user/repos -d '{"name":"'${repo_name}'"}' | grep "Validation Failed")" ];then
        kdialog --error "Unable to create repo ${repo_name} for user ${user_name}" # Should be fifo to get output in xdialog
        exit 1
fi

# Add remote origin or init repo
    git remote remove origin || git init >/dev/null 2>&1
    git remote add origin git@github.com:${user_name}/${repo_name}.git || { 
        kdialog --error "Unable to create repo at git@github.com:${user_name}/${repo_name}.git"
        exit 1
        }
    if [ -z "$(ls)" ];then
        touch Readme.md
        
# Add Readme.md file to git
        git add Readme.md || { 
            kdialog --error "Unable add Readme.md file to git"
            exit 1
            }

# First commit
        git commit -m "Initial commit from mkpkg" || { 
            kdialog --error "Unable to first commit to git@github.com:${user_name}/${repo_name}.git"
            exit 1
            }
    fi

# First push
    git push -u origin master || {
        kdialog --error "Unable to push repo to git@github.com:${user_name}/${repo_name}.git"
        exit 1
        }
        
    kdialog --yesno "Code pushed to remote. \nYour newly created git repository can be found at: \nhttps://github.com/${repo_name}\nClick 'Next' to create basic files."
    [ "$?" = "0" ] && exit 0
    export repo_name=${repo_name}
    
